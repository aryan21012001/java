Write a function to add integer values of an array
public class AddIntegerValues {
    static int arrSum(int[] arr) {
        int sum = 0;
        for (int i = 0; i < arr.length; i++)
            sum = sum + arr[i];
        return sum;
    }
    public static void main(String[] args) {
        //declaration, instantiation and initialization
        int[] arr = {10, 20, 30, 40, 50};
        for (int i : arr)
            System.out.print(i + " + ");
        System.out.print(" =  " + arrSum(arr));
    }
}


Write a function to calculate the average value of an array of integers
public class CalculateAverageValue {
    static void avgArray(int[] arr) {
        int sum = 0;
        for (int i : arr) {
            sum = sum + i;
        }
        int average = sum / arr.length;
        //Prints the average number
        System.out.print("The Average value of array is " + average);
    }
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5};
        avgArray(arr);
    }
}


Write a program to find the index of an array element
import java.util.*;
public class FindIndex {
    static void arrIndex(int[] arr, int n) {
        for (int i = 0; i < arr.length; i++)
            if (n == arr[i]) {
                System.out.println(n + " is at index " + i);
                return;
            }
    }
    public static void main(String[] args) {
        int index;
        int[] arr = {11, 22, 33, 44, 55, 66, 77};
        System.out.println("arr = " + Arrays.toString(arr));
        System.out.print("Select any value to find Index of array : ");
        Scanner sc = new Scanner(System.in);
        index = sc.nextByte();
        arrIndex(arr, index);
    }
}


Write a function to test if array contains a specific value
import java.util.*;
public class ContainsSpecificValue {
    static boolean contains(int[] arr, int n) {
        for (int i : arr) {
            if (i == n) {
                return true;
            }
        }
        return false;
    }
    public static void main(String[] args) {
        int n;
        int[] arr = {11, 22, 33, 44, 55};
        System.out.print("Enter the value which should be searched : ");
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        boolean hasValue = contains(arr, n);
        if (hasValue) {
            System.out.println("Contains " + n + " in the array");
            System.out.println(Arrays.toString(arr));
        } else {
            System.out.println("Does not Contains " + n + " in the array");
            System.out.println(Arrays.toString(arr));
        }
    }
}


Write a function to remove a specific element from an array
import java.util.*;
public class RemoveElementFromArray {
    public static int[] removeElement(int[] arr, int index)
    {
        if (arr == null || index < 0 || index >= arr.length) {
            return arr;
        }
        int[] anotherArray = new int[arr.length - 1];
        for (int i = 0, k = 0; i < arr.length; i++) {
            if (i == index) {
                continue;
            }
            anotherArray[k++] = arr[i];
        }
        return anotherArray;
    }
    public static void main(String[] args) {
        int[] arr = { 11, 22, 33, 44, 55 };
        System.out.print("Select an index to remove a value from arr = " + Arrays.toString(arr) + ": ");
        Scanner sc = new Scanner(System.in);
        int index = sc.nextInt();
        System.out.println("Array after removing Element at index " + index );
        arr = removeElement(arr, index);
        System.out.println("arr = " + Arrays.toString(arr));
    }
}


Write a function to copy an array to another array
import java.util.*;
public class CopyArray {
    static void copyingArray(int[] arr) {
        int[] copy = arr;
        System.out.println("Array after copying to c = " + Arrays.toString(copy));
    }
    public static void main(String[] args) {
        int n;
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of elements you want to store : ");
        n = sc.nextInt();
        System.out.println("Enter the Elements of the array ");
        int[] my_arr = new int[n];
        for (int i = 0; i < n; i++) {
            System.out.printf("my_arr[%d] = ", i);
            my_arr[i] = sc.nextInt();
        }
        System.out.println("my_arr = " + Arrays.toString(my_arr));
        copyingArray(my_arr);
    }
}


Write a function to insert an element at a specific position in the array
import java.util.*;
public class InsertAtSpecificPosition {
    static void insertElement(int[] arr, int index, int v) {
        for (int i = arr.length; i <= index; i--) {
            arr[i] = arr[i - 1];
        }
        arr[index] = v;
    }
    public static void main(String[] args) {
        int index, v;
        int[] my_arr = {11, 22, 33, 44, 55, 66, 77, 88, 99};
        System.out.println("original Array : my_arr = " + Arrays.toString(my_arr));
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the index number : ");
        index = sc.nextInt();
        System.out.printf("Enter the value to insert at index my_arr[%d] =  ", index);
        v = sc.nextInt();
        insertElement(my_arr, index, v);
        System.out.println("Array after Inserting Element : ");
        System.out.println("my_arr = " + Arrays.toString(my_arr));
    }
}


Write a function to find the minimum and maximum value of an array
import java.util.Arrays;
public class MinMaxValue {
    static int minValue(int[] arr) {
        int min = arr[0];
        for (int j : arr)
            if (j < min)
                min = j;
        return min;
    }
    static int maxValue(int[] arr) {
        int max = arr[0];
        for (int j : arr)
            if (j > max)
                max = j;
        return max;
    }
    public static void main(String[] args) {
        int[] my_arr = {11, 22, 33, 44, 55, 66};
        System.out.println("my_arr = " + Arrays.toString(my_arr));
        System.out.println("The Maximum value = " + maxValue(my_arr));
        System.out.println("The Minimum value = " + minValue(my_arr));
    }
}


Write a function to reverse an array of integer values
import java.util.Arrays;
public class ReverseArray {r
    static void reverseArray(int[] arr) {
        int[] r_arr = new int[arr.length];
        int j = arr.length;
        for (int i : arr) {
            r_arr[j - 1] = i;
            j = j - 1;
        }
        System.out.println("Reversed Array  : r_arr = " + Arrays.toString(r_arr));
    }
    public static void main(String[] args) {
        int[] my_arr = {11, 22, 33, 44, 55};
        System.out.println("Original Array : my_arr = " + Arrays.toString(my_arr));
        reverseArray(my_arr);
    }
}


Write a function to find the duplicate values of an array
import java.util.Arrays;
public class DuplicateValues {
    static void duplicateValues(int[] arr) {
        System.out.println("Duplicate values : ");
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if ((arr[i] == arr[j] && (i != j))) {
                    System.out.print(arr[j] + " ");
                }
            }
        }
    }
    public static void main(String[] args) {
        int[] my_arr = {11, 22, 33, 44, 55, 22, 44, 33};
        System.out.println("my_arr[] = " + Arrays.toString(my_arr));
        duplicateValues(my_arr);
    }
}


Write a program to find the common values between two arrays
import java.util.Arrays;
public class CommonValuesInTwoArrays {
    static void commonValues(int[] arr1, int[] arr2) {
        for (int k : arr1) {
            for (int i : arr2) {
                if (k == i) {
                    //prints common elements
                    System.out.println("Common values : " + k);
                }
            }
        }
    }
    public static void main(String[] args) {
        int[] arr1 = {11, 22, 33, 44, 55};
        int[] arr2 = {66, 55, 77, 11, 88};
        System.out.println("arr1[] = " + Arrays.toString(arr1));
        System.out.println("arr2[] = " + Arrays.toString(arr2));
        commonValues(arr1, arr2);
    }
}


Write a method to remove duplicate elements from an array
import java.util.Arrays;
public class RemoveDuplicateElements {
    static int removerDuplicate(int[] arr, int n) {
        if (n == 0 || n == 1) {
            return n;
        }
        int[] temp = new int[n];
        int j = 0;
        for (int i = 0; i < n - 1; i++) {
            if (arr[i] != arr[i + 1]) {
                temp[j++] = arr[i];
            }
        }
        temp[j++] = arr[n - 1];
        for (int i = 0; i < j; i++) {
            arr[i] = temp[i];
        }
        return j;
    }
    public static void main(String[] args) {
        int[] arr = {11, 22, 22, 33, 44, 44, 55, 66, 66};
        System.out.println("arr[] = " + Arrays.toString(arr));
        int n = arr.length;
        n = removerDuplicate(arr, n);
        System.out.println("Array after removing duplicate values : ");
        for (int i = 0; i < n; i++)
            System.out.print(arr[i] + " ");
    }
}


Write a method to find the second largest number in an array
import java.util.Arrays;
public class SecondLargestNumber {r
    static void secondLargest(int[] arr) {
        int temp;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] > arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        System.out.println("The second largest number in Array : " + arr[arr.length - 2]);
    }
    public static void main(String[] args) {
        int[] my_arr = {11, 22, 33, 44, 55};
        System.out.println("arr[] = " + Arrays.toString(my_arr));
        secondLargest(my_arr);
    }
}


Write a method to find number of even number and odd numbers in an array
import java.util.Arrays;
public class EvenOddNumbers {
    static void evenNumber(int[] arr) {
        System.out.print("Even numbers in array : ");
        for (int i : arr) {
            if (i % 2 == 0) {
                System.out.print(i + "  ");
            }
        }
    }
    static void oddNumber(int[] arr) {
        System.out.print("\nOdd numbers in array : ");
        for (int j : arr) {
            //any numbers divided by 2 if doesn't leaves remainder 0 is an odd number
            if (j % 2 != 0) {
                System.out.print(j + "  ");
            }
        }
    }
    public static void main(String[] args) {
        int[] arr = {11, 22, 33, 44, 55};
        System.out.println("a[] = " + Arrays.toString(arr));
        evenNumber(arr);
        oddNumber(arr);
    }
}


Write a method to verify if the array contains two specified elements(12,23)
import java.util.*;
public class ContainsSpecificElements {
    static void contains(int[] arr, int n1,int n2) {
        boolean num1 = false;
        boolean num2 = false;
        for (int i : arr) {
            //checks if given element is present and returns true
            if (i == n1) {
                num1 = true;
            }
            if (i==n2){
                num2 = true;
            }
        }
        if (num1) {
            System.out.printf("Contains %d in the array", n1);
        } else {
            System.out.printf("\nDoesn't Contain %d in the array", n1);
        }
        if (num2) {
            System.out.printf("\nContains %d in the array", n2);
        } else {
            System.out.printf("\nDoesn't Contain %d in the array", n2);
        }
        System.out.println("\nmy_arr[] = " + Arrays.toString(arr));
    }
    public static void main(String[] args) {
        int[] my_arr = {11, 22, 12, 33, 44, 23, 55};
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter value to verify (n1 & n2): ");
        int n1 = sc.nextInt();
        int n2 = sc.nextInt();
        contains(my_arr, n1,n2);
    }
}


Write a program to remove the duplicate elements and return the new array
import java.util.*;
public class RemoveElementFromArray {
    public static int[] removeElement(int[] arr, int index)
    {
        if (arr == null || index < 0 || index >= arr.length) {
            return arr;
        }
        int[] anotherArray = new int[arr.length - 1];
        for (int i = 0, k = 0; i < arr.length; i++) {
            if (i == index) {
                continue;
            }
            anotherArray[k++] = arr[i];
        }
        return anotherArray;
    }
    public static void main(String[] args) {
        int[] arr = { 11, 22, 33, 44, 55 };
        System.out.print("Select an index to remove a value from arr = " + Arrays.toString(arr) + ": ");
        Scanner sc = new Scanner(System.in);
        int index = sc.nextInt();
        System.out.println("Array after removing Element at index " + index );
        arr = removeElement(arr, index);
        System.out.println("arr = " + Arrays.toString(arr));
    }
}


Write a function to find the missing number of sorted array of 1 to 100
import java.util.Arrays;
public class MissingNumbers {
    static void missingNumber(int[] arr) {
        Arrays.sort(arr);
        System.out.println("a[] = " + Arrays.toString(arr));
        int j = 0;
        for (int i = 1; i < 100; i++) {
            if (j < arr.length && i == arr[j])
                j++;
            else
                System.out.print(i + " ");
        }
    }
    public static void main(String[] args) {
        int[] my_arr = {10, 20, 30, 40, 50, 60, 70, 80, 90};
        missingNumber(my_arr);
    }
}
